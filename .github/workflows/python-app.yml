name: Auto Create PR

on:
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.13"]
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-mock
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Run tests
        run: |
          pytest test_calculator.py -v --cov=calculator --cov-report=term-missing

  create-pr:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Check if PR exists
        id: check
        run: |
          BRANCH="${{ github.ref_name }}"
          PR_EXISTS=$(gh pr list --head "$BRANCH" --base main --json number --jq 'length')
          echo "exists=$PR_EXISTS" >> $GITHUB_OUTPUT
          echo "PR exists: $PR_EXISTS"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Pull Request
        if: steps.check.outputs.exists == '0'
        run: |
          BRANCH="${{ github.ref_name }}"
          echo "Creating PR for branch: $BRANCH"
          
          gh pr create \
            --title "Merge $BRANCH to main" \
            --body "## Automated Pull Request
          
          âœ… All tests passed!
          
          **Branch:** \`$BRANCH\`
          **Author:** @${{ github.actor }}
          
          Please review and merge." \
            --base main \
            --head "$BRANCH" \
            --label "automated"
          
          echo "âœ… PR created successfully!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Comment on existing PR
        if: steps.check.outputs.exists != '0'
        run: |
          BRANCH="${{ github.ref_name }}"
          PR_NUMBER=$(gh pr list --head "$BRANCH" --base main --json number --jq '.[0].number')
          
          gh pr comment $PR_NUMBER \
            --body "ðŸ¤– New commits pushed! All tests still passing âœ…"
          
          echo "âœ… Updated PR #$PR_NUMBER"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
